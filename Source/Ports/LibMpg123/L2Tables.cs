/******************************************************************************/
/* This source, or parts thereof, may be used in any software as long the     */
/* license of NostalgicPlayer is keep. See the LICENSE file for more          */
/* information.                                                               */
/******************************************************************************/
using Polycode.NostalgicPlayer.Ports.LibMpg123.Containers;

namespace Polycode.NostalgicPlayer.Ports.LibMpg123
{
	/// <summary>
	/// Layer 2 alloc tables
	/// </summary>
	internal static class L2Tables
	{
		/********************************************************************/
		/// <summary>
		/// 
		/// </summary>
		/********************************************************************/
		public static readonly Al_Table[] Alloc_0 =
		{
			new(4, 0), new(5, 3), new(3, -3), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255), new(10, -511),
			new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383), new(16, -32767),
			new(4, 0), new(5, 3), new(3, -3), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255), new(10, -511),
			new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383), new(16, -32767),
			new(4, 0), new(5, 3), new(3, -3), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255), new(10, -511),
			new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767)
		};



		/********************************************************************/
		/// <summary>
		/// 
		/// </summary>
		/********************************************************************/
		public static readonly Al_Table[] Alloc_1 =
		{
			new(4, 0), new(5, 3), new(3, -3), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255), new(10, -511),
			new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383), new(16, -32767),
			new(4, 0), new(5, 3), new(3, -3), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255), new(10, -511),
			new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383), new(16, -32767),
			new(4, 0), new(5, 3), new(3, -3), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255), new(10, -511),
			new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(3, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767),
			new(2, 0), new(5, 3), new(7, 5), new(16, -32767)
		};



		/********************************************************************/
		/// <summary>
		/// 
		/// </summary>
		/********************************************************************/
		public static readonly Al_Table[] Alloc_2 =
		{
			new(4, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255),
			new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383),
			new(4, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255),
			new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63)
		};



		/********************************************************************/
		/// <summary>
		/// 
		/// </summary>
		/********************************************************************/
		public static readonly Al_Table[] Alloc_3 =
		{
			new(4, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255),
			new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383),
			new(4, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127), new(9, -255),
			new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191), new(15, -16383),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63)
		};



		/********************************************************************/
		/// <summary>
		/// 
		/// </summary>
		/********************************************************************/
		public static readonly Al_Table[] Alloc_4 =
		{
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191),
			new(4, 0), new(5, 3), new(7, 5), new(3, -3), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63), new(8, -127),
			new(9, -255), new(10, -511), new(11, -1023), new(12, -2047), new(13, -4095), new(14, -8191),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(3, 0), new(5, 3), new(7, 5), new(10, 9), new(4, -7), new(5, -15), new(6, -31), new(7, -63),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9),
			new(2, 0), new(5, 3), new(7, 5), new(10, 9)
		};
	}
}
